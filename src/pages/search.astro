---
import Layout from '../layouts/Layout.astro';
import SearchBar from '../components/SearchBar.astro';
import BusinessCard from '../components/BusinessCard.astro';
import { getSampleListings } from '../utils/staticDataLoader';
import { filterListings } from '../utils/dataLoader';

// Get search parameters
const url = new URL(Astro.request.url);
const searchQuery = url.searchParams.get('q') || '';
const locationQuery = url.searchParams.get('location') || '';

// Load and filter listings
const allListings = getSampleListings();
const filteredListings = filterListings(allListings, searchQuery, locationQuery);

// Create breadcrumbs
const breadcrumbs = [
  { label: 'Home', href: '/' },
  { label: 'Search Results' }
];

// Generate page title and description
const getPageTitle = () => {
  if (searchQuery && locationQuery) {
    return `${searchQuery} in ${locationQuery}`;
  } else if (searchQuery) {
    return `Search: ${searchQuery}`;
  } else if (locationQuery) {
    return `Fish & Chip Shops in ${locationQuery}`;
  }
  return 'Search Results';
};

const getPageDescription = () => {
  const resultCount = filteredListings.length;
  let base = `Found ${resultCount} fish & chip shop${resultCount !== 1 ? 's' : ''}`;
  
  if (searchQuery && locationQuery) {
    base += ` for "${searchQuery}" in ${locationQuery}`;
  } else if (searchQuery) {
    base += ` matching "${searchQuery}"`;
  } else if (locationQuery) {
    base += ` in ${locationQuery}`;
  }
  
  return base + '. Find opening times, reviews, and contact details.';
};
---

<Layout
  title={getPageTitle()}
  description={getPageDescription()}
  keywords={`fish and chips, chippy, ${searchQuery}, ${locationQuery}, search, UK`}
  canonicalUrl={Astro.url.origin + Astro.url.pathname}
  breadcrumbs={breadcrumbs}
>
  <main>
    <!-- Search Header -->
    <section class="bg-blue-600 text-white py-8">
      <div class="container mx-auto px-4">
        <h1 class="text-2xl md:text-3xl font-bold mb-6">
          {getPageTitle()}
        </h1>
        
        <!-- Search Bar -->
        <SearchBar 
          initialValue={searchQuery}
          showLocationFilter={true}
        />
      </div>
    </section>

    <!-- Results Section -->
    <section class="bg-gray-50 py-8">
      <div class="container mx-auto px-4">
        <!-- Results Info -->
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4">
          <div>
            <p class="text-gray-600">
              {filteredListings.length === 0 
                ? 'No results found' 
                : `Showing ${filteredListings.length} result${filteredListings.length !== 1 ? 's' : ''}`
              }
              {(searchQuery || locationQuery) && (
                <span>
                  {' '}for{' '}
                  {searchQuery && <strong>"{searchQuery}"</strong>}
                  {searchQuery && locationQuery && ' in '}
                  {locationQuery && <strong>{locationQuery}</strong>}
                </span>
              )}
            </p>
          </div>
          
          <!-- Sort Options (placeholder for future implementation) -->
          <div class="flex gap-2">
            <select 
              id="sortSelect" 
              class="px-3 py-2 border border-gray-300 rounded-lg text-sm"
              onchange="sortBusinesses(this.value)"
            >
              <option value="rating-high">Sort by: Rating (High to Low)</option>
              <option value="rating-low">Rating (Low to High)</option>
              <option value="name-az">Name (A-Z)</option>
              <option value="name-za">Name (Z-A)</option>
              <option value="reviews-most">Reviews (Most)</option>
              <option value="reviews-least">Reviews (Least)</option>
            </select>
          </div>
        </div>

        <!-- Results Grid -->
        {filteredListings.length > 0 ? (
          <div id="businessGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredListings.map((listing, index) => (
              <div class="business-card" 
                   data-rating={listing.rating || 0}
                   data-reviews={listing.reviewCount || 0}
                   data-name={listing.name.text}
                   data-index={index}
              >
                <BusinessCard business={listing} />
              </div>
            ))}
          </div>
        ) : (
          <!-- No Results -->
          <div class="bg-white rounded-lg p-8 text-center">
            <div class="text-6xl mb-4">üîç</div>
            <h2 class="text-xl font-semibold text-gray-900 mb-4">
              No fish & chip shops found
            </h2>
            <p class="text-gray-600 mb-6">
              {searchQuery || locationQuery 
                ? 'Try adjusting your search criteria or browse all locations.'
                : 'Try searching for a specific location or business name.'
              }
            </p>
            
            <!-- Search Suggestions -->
            <div class="space-y-4">
              <div>
                <h3 class="font-medium text-gray-900 mb-2">Try searching for:</h3>
                <div class="flex flex-wrap gap-2 justify-center">
                  <a href="/search?q=fish+and+chips" class="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm hover:bg-blue-200">
                    Fish & Chips
                  </a>
                  <a href="/search?q=takeaway" class="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm hover:bg-blue-200">
                    Takeaway
                  </a>
                  <a href="/search?location=devon" class="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm hover:bg-blue-200">
                    Devon
                  </a>
                  <a href="/search?location=brixham" class="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm hover:bg-blue-200">
                    Brixham
                  </a>
                </div>
              </div>
              
              <div class="pt-4 border-t">
                <a 
                  href="/"
                  class="inline-block bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"
                >
                  Back to Homepage
                </a>
              </div>
            </div>
          </div>
        )}

        <!-- Load More (placeholder for future pagination) -->
        {filteredListings.length > 6 && (
          <div class="text-center mt-8">
            <button class="bg-white border border-gray-300 text-gray-700 px-6 py-2 rounded-lg hover:bg-gray-50 transition-colors">
              Load More Results
            </button>
          </div>
        )}
      </div>
    </section>

    <!-- Search Tips -->
    {filteredListings.length === 0 && (
      <section class="bg-white py-12">
        <div class="container mx-auto px-4">
          <div class="max-w-2xl mx-auto text-center">
            <h2 class="text-2xl font-bold text-gray-900 mb-6">Search Tips</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 text-left">
              <div class="bg-gray-50 rounded-lg p-4">
                <h3 class="font-semibold text-gray-900 mb-2">üè™ Business Names</h3>
                <p class="text-gray-600 text-sm">Search for specific fish & chip shop names like "Rockfish" or "Simply Fish"</p>
              </div>
              <div class="bg-gray-50 rounded-lg p-4">
                <h3 class="font-semibold text-gray-900 mb-2">üìç Locations</h3>
                <p class="text-gray-600 text-sm">Try town names, postcodes, or broader areas like "Devon" or "Brixham"</p>
              </div>
              <div class="bg-gray-50 rounded-lg p-4">
                <h3 class="font-semibold text-gray-900 mb-2">üçü Food Types</h3>
                <p class="text-gray-600 text-sm">Search for "takeaway", "restaurant", or "fish and chips"</p>
              </div>
              <div class="bg-gray-50 rounded-lg p-4">
                <h3 class="font-semibold text-gray-900 mb-2">üéØ Be Specific</h3>
                <p class="text-gray-600 text-sm">Combine location and business type for better results</p>
              </div>
            </div>
          </div>
        </div>
      </section>
    )}
  </main>
</Layout>

<style>
  .container {
    max-width: 1200px;
  }
</style>

<script>
  function sortBusinesses(sortType) {
    console.log('Sorting by:', sortType);
    
    const grid = document.getElementById('businessGrid');
    if (!grid) {
      console.error('Grid not found');
      return;
    }
    
    const cards = Array.from(grid.querySelectorAll('.business-card'));
    console.log('Found cards:', cards.length);
    
    if (cards.length === 0) {
      console.error('No business cards found');
      return;
    }
    
    cards.sort((a, b) => {
      const aRating = parseFloat(a.dataset.rating) || 0;
      const bRating = parseFloat(b.dataset.rating) || 0;
      const aReviews = parseInt(a.dataset.reviews) || 0;
      const bReviews = parseInt(b.dataset.reviews) || 0;
      const aName = (a.dataset.name || '').toLowerCase();
      const bName = (b.dataset.name || '').toLowerCase();
      
      switch (sortType) {
        case 'rating-high':
          if (bRating !== aRating) return bRating - aRating;
          return bReviews - aReviews;
          
        case 'rating-low':
          if (aRating !== bRating) return aRating - bRating;
          return aReviews - bReviews;
          
        case 'name-az':
          return aName.localeCompare(bName);
          
        case 'name-za':
          return bName.localeCompare(aName);
          
        case 'reviews-most':
          return bReviews - aReviews;
          
        case 'reviews-least':
          return aReviews - bReviews;
          
        default:
          return 0;
      }
    });
    
    // Clear the grid and re-add sorted cards
    while (grid.firstChild) {
      grid.removeChild(grid.firstChild);
    }
    
    cards.forEach(card => {
      grid.appendChild(card);
    });
  }
  
  // Make sure the function is available globally
  window.sortBusinesses = sortBusinesses;
</script>
